{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:3001/api/v1',\n  // Updated to match backend port\n  withCredentials: true // needed for sending cookies\n});\n\n// Add request interceptor for logging\napi.interceptors.request.use(config => {\n  console.log('Making request to:', config.url);\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Add response interceptor for logging\napi.interceptors.response.use(response => {\n  console.log('Response received:', response.status);\n  return response;\n}, error => {\n  var _error$response, _error$response2, _error$config;\n  console.error('Response error:', {\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data,\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url\n  });\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","withCredentials","interceptors","request","use","config","console","log","url","error","Promise","reject","response","status","_error$response","_error$response2","_error$config","data"],"sources":["C:/Users/Mariam/Desktop/SW-PROJ/SW-project/Frontend/frontendd/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:3001/api/v1', // Updated to match backend port\r\n  withCredentials: true, // needed for sending cookies\r\n});\r\n\r\n// Add request interceptor for logging\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    console.log('Making request to:', config.url);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('Request error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor for logging\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log('Response received:', response.status);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('Response error:', {\r\n      status: error.response?.status,\r\n      data: error.response?.data,\r\n      url: error.config?.url\r\n    });\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,8BAA8B;EAAE;EACzCC,eAAe,EAAE,IAAI,CAAE;AACzB,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACVC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,MAAM,CAACG,GAAG,CAAC;EAC7C,OAAOH,MAAM;AACf,CAAC,EACAI,KAAK,IAAK;EACTH,OAAO,CAACG,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;EACtC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAX,GAAG,CAACI,YAAY,CAACU,QAAQ,CAACR,GAAG,CAC1BQ,QAAQ,IAAK;EACZN,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEK,QAAQ,CAACC,MAAM,CAAC;EAClD,OAAOD,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EAAA,IAAAK,eAAA,EAAAC,gBAAA,EAAAC,aAAA;EACTV,OAAO,CAACG,KAAK,CAAC,iBAAiB,EAAE;IAC/BI,MAAM,GAAAC,eAAA,GAAEL,KAAK,CAACG,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBD,MAAM;IAC9BI,IAAI,GAAAF,gBAAA,GAAEN,KAAK,CAACG,QAAQ,cAAAG,gBAAA,uBAAdA,gBAAA,CAAgBE,IAAI;IAC1BT,GAAG,GAAAQ,aAAA,GAAEP,KAAK,CAACJ,MAAM,cAAAW,aAAA,uBAAZA,aAAA,CAAcR;EACrB,CAAC,CAAC;EACF,OAAOE,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeX,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}