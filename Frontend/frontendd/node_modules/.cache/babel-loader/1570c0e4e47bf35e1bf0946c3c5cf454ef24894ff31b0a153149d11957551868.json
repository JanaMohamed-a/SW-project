{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mariam\\\\Desktop\\\\SW-PROJ\\\\SW-project\\\\Frontend\\\\frontendd\\\\src\\\\components\\\\auth\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport api from '../../services/api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const login = async (email, password) => {\n    try {\n      const res = await api.post('/login', {\n        email,\n        password\n      });\n      if (res.data.user) {\n        setUser(res.data.user);\n        return res;\n      } else {\n        throw new Error('No user data in response');\n      }\n    } catch (error) {\n      if (error.response) {\n        var _error$response$data;\n        throw new Error(((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Server error occurred');\n      } else if (error.request) {\n        throw new Error('No response from server. Please check your connection.');\n      } else {\n        throw new Error(error.message || 'An unexpected error occurred');\n      }\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    // clear tokens/localStorage here if used\n  };\n  const forgotPassword = async email => {\n    try {\n      const res = await api.post('/forgetpassword', {\n        email\n      });\n      return res.data;\n    } catch (error) {\n      console.error('Forgot password error:', error);\n      throw error;\n    }\n  };\n  const verifyResetCode = async (email, code, newPassword) => {\n    try {\n      const res = await api.post('/verifyresetpassword', {\n        email,\n        verificationCode: code,\n        newPassword\n      });\n      return res.data;\n    } catch (error) {\n      if (error.response) {\n        var _error$response$data2;\n        throw new Error(((_error$response$data2 = error.response.data) === null || _error$response$data2 === void 0 ? void 0 : _error$response$data2.message) || 'Verification failed');\n      } else if (error.request) {\n        throw new Error('No response from server. Please check your connection.');\n      } else {\n        throw new Error(error.message || 'Unexpected error');\n      }\n    }\n  };\n  const fetchEvents = async () => {\n    try {\n      const res = await api.get('/events');\n      return res;\n    } catch (error) {\n      console.error('Error fetching events:', error);\n      throw error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      setUser,\n      login,\n      logout,\n      forgotPassword,\n      verifyResetCode,\n      fetchEvents\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","login","email","password","res","post","data","Error","error","response","_error$response$data","message","request","logout","forgotPassword","console","verifyResetCode","code","newPassword","verificationCode","_error$response$data2","fetchEvents","get","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Mariam/Desktop/SW-PROJ/SW-project/Frontend/frontendd/src/components/auth/AuthContext.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\r\nimport api from '../../services/api.js';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const res = await api.post('/login', { email, password });\r\n      if (res.data.user) {\r\n        setUser(res.data.user);\r\n        return res;\r\n      } else {\r\n        throw new Error('No user data in response');\r\n      }\r\n    } catch (error) {\r\n      if (error.response) {\r\n        throw new Error(error.response.data?.message || 'Server error occurred');\r\n      } else if (error.request) {\r\n        throw new Error('No response from server. Please check your connection.');\r\n      } else {\r\n        throw new Error(error.message || 'An unexpected error occurred');\r\n      }\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    // clear tokens/localStorage here if used\r\n  };\r\n\r\n  const forgotPassword = async (email) => {\r\n    try {\r\n      const res = await api.post('/forgetpassword', { email });\r\n      return res.data;\r\n    } catch (error) {\r\n      console.error('Forgot password error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const verifyResetCode = async (email, code, newPassword) => {\r\n    try {\r\n      const res = await api.post('/verifyresetpassword', { email, verificationCode: code, newPassword });\r\n      return res.data;\r\n    } catch (error) {\r\n      if (error.response) {\r\n        throw new Error(error.response.data?.message || 'Verification failed');\r\n      } else if (error.request) {\r\n        throw new Error('No response from server. Please check your connection.');\r\n      } else {\r\n        throw new Error(error.message || 'Unexpected error');\r\n      }\r\n    }\r\n  };\r\n\r\n  const fetchEvents = async () => {\r\n    try {\r\n      const res = await api.get('/events');\r\n      return res;\r\n    } catch (error) {\r\n      console.error('Error fetching events:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, setUser, login, logout, forgotPassword, verifyResetCode, fetchEvents }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}